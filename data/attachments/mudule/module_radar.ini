
[core]

name: module_Radar
copyFrom: common_slot.ini

displayText: EWS
displayDescription: -Points incoming enemy movements within a radius\n-Doesn't provide vision, Range: 700\n-Detects nearest units, Update ping every 2.5s
displayText_ru: Радар
displayDescription_ru: Обнаруживает вражеские движения, помечая их на поле боя \n - Не дает улучшенной видимости \n - Цель обновляется каждые 2.5 сек \n Радиус радара - infinite
displayDescription_zh: -指出半径范围内敌人的来袭行动\n-不提供视野，范围：700\n-检测最近的单位，每2.5s更新

price: 1500
maxHp: 300
#fogOfWarSightRange: 36

energyMax: 10
energyRegen: 0
energyNeedsToRechargeToFull: true

tags: capmid, module+

[hiddenAction_charge]
autoTrigger: if self.energy(lessThan=0.3) and not self.hasFlag(id=5)
requireConditional: if self.energy(lessThan=0.3) and not self.hasFlag(id=5)
addResources: setFlag=5, energy=10

alsoQueueAction: chargeB
clearAllWaypoints: true
[hiddenAction_chargeB]
buildSpeed: 0.2s
requireConditional: if self.hasFlag(id=5) 
addResources: unsetFlag=5


[hiddenAction_Energy-]
addEnergy: -10
[action_reset]
text: Ping Nearest
#text_ru: 
displayType:action
description: pings the nearest Unit
#description_ru: 
#text_zh:
#description_zh:
isGuiBlinking: if not self.tags(includes="ExPing") and not self.tags(includes="AirPing") and not self.tags(includes="BuilderPing") and not self.tags(includes="fabPing")
buildSpeed:0.1s
resetToDefaultTags: true
alwaysSinglePress:true
allowMultipleInQueue: false

[action_pingbuilder]
text: Ping Builders
#text_ru: 
displayType:action
description: pings the nearest builder unit on the map
#description_ru: 
#text_zh:
#description_zh: 
isGuiBlinking: if self.tags(includes="builderPing")
buildSpeed:0.1s
resetToDefaultTags: true
temporarilyAddTags: builderPing
alwaysSinglePress:true
allowMultipleInQueue: false

[action_pingAir]
text: Ping Air
#text_ru: 
displayType:action
description: pings the nearest air unit on the map
#description_ru: 
#text_zh:
#description_zh: 
isGuiBlinking: if self.tags(includes="airPing")
buildSpeed:0.1s
resetToDefaultTags: true
temporarilyAddTags: airPing
alwaysSinglePress:true
allowMultipleInQueue: false

[action_fab]
text: Ping fabricators
#text_ru: 
displayType:action
description: pings the nearest Fabricators on the map
#description_ru: 
#text_zh:
#description_zh: 
isGuiBlinking: if self.tags(includes="fabPing")
buildSpeed:0.1s
resetToDefaultTags: true
temporarilyAddTags: fabPing
alwaysSinglePress:true
allowMultipleInQueue: false

[action_pingExp]
text: Ping experimentals
#text_ru: 
displayType:action
description: pings the nearest experimental unit on the map
#description_ru: 
#text_zh:
#description_zh: 
isGuiBlinking: if self.tags(includes="ExPing")
buildSpeed:0.1s
resetToDefaultTags: true
temporarilyAddTags: ExPing
alwaysSinglePress:true
allowMultipleInQueue: false

[action_passive]
displayType: infoOnlyNoBox
isVisible: true
buildSpeed: 0s
textAddUnitName: ${core.name}
descriptionAddFromUnit: ${core.name} 
descriptionAddUnitStats: ${core.name} 
iconImage: dish_2.png
pos: 10

#===================================================
[action_reclaim]
description: -Free up slot for another module type.\n-Refund ${core.price*0.5} credits
description_ru: - Освободить слот для другого модуля\n- Вернёт ${core.price*0.5} ресурсов.
description_zh:-为其他模块类型释放空间\n-退款${core.price*0.5}资金
addResources: credits=${core.price*0.5}
#===================================================

[graphics]
#isVisible: if not self.hasParent()
image:        SHARED:blank.png
#image_turret: ROOT:data\null.png
#scaleTurretImagesTo: 1.1

image_shadow: NONE
shadowOffsetX:3
shadowOffsetY:3
#showQueueBar: false
#showEnergyBar: false
[attack]
canAttack: true
canAttackFlyingUnits: if not self.hasFlag(id=5) 
canAttackLandUnits:   if not self.hasFlag(id=5) 
canAttackUnderwaterUnits: if not self.hasFlag(id=5) 
stopTargetingAfterFiring:true
maxAttackRange: 9999
aimOffsetSpread: 0

turretMultiTargeting: true
[turret_1]
#dummy
x: 0
y: 0

size: 0
turnSpeed: 2
canShoot: false

idleSweepAddRandomAngle:150
idleSweepAngle:40
idleSweepDelay:100
idleSweepAddRandomDelay: 100
idleSweepSpeed:2
[turret_def]
x: 0
y: 30
invisible: if not self.hasParent()
attachedTo: 1
slave: false
image: prop.png
canShoot: false

canAttackFlyingUnits: false
canAttackLandUnits:   false
canAttackUnderwaterUnits: false
clearTurretTargetAfterFiring: true
idleSweepAddRandomAngle:150
idleSweepAngle:140
idleSweepDelay:20
idleSweepAddRandomDelay: 60
idleSweepSpeed:4
[turret_nearest]
#nano turret
x: 0
y: 30
attachedTo: 1
slave: false

energyUsage: 10
projectile: beam

size: 10
invisible: if not self.hasParent()
image: dish_2.png

delay: 2.5s

turnSpeed: 4.2
turnSpeedAcceleration: 1

canAttackCondition: if not self.tags(includes="ExPing") and not self.tags(includes="AirPing") and not self.tags(includes="BuilderPing") and not self.tags(includes="fabPing")
canOnlyAttackUnitsWithoutTags: wallT1, wallT2

canShoot: true
canAttackFlyingUnits: if not self.hasFlag(id=5) 
canAttackLandUnits:   if not self.hasFlag(id=5) 
canAttackUnderwaterUnits: if not self.hasFlag(id=5) 
onShoot_triggerActions: Energy- 

idleSweepAddRandomAngle:150
idleSweepAngle:140
idleSweepDelay:20
idleSweepAddRandomDelay: 60
idleSweepSpeed:4
limitingMinRange: 360

#onShoot_freezeBodyMovementFor: 2s
shouldResetTurret: true

[turret_exp]
@copyFromSection: turret_nearest
invisible: true

canAttackCondition: if self.tags(includes="ExPing") and self.isEnergyFull()
canOnlyAttackUnitsWithTags: exp

[turret_air]
@copyFromSection: turret_nearest
invisible: true

canAttackCondition: if self.tags(includes="airPing") and self.isEnergyFull()
canAttackFlyingUnits: true
canAttackLandUnits: false
canAttackUnderwaterUnits: false
[turret_fabs]
@copyFromSection: turret_nearest
invisible: true

canAttackCondition: if self.tags(includes="fabPing") and self.isEnergyFull()
canOnlyAttackUnitsWithTags: fabricator

[turret_builders]
@copyFromSection: turret_nearest
invisible: true

canAttackCondition: if self.tags(includes="builderPing") and self.isEnergyFull()
canOnlyAttackUnitsWithTags: combatengineer, builder, AiBuilder, tacticalMech

[projectile_beam]

#=== for the beam effect ===
life: 180

instant:true
instantReuseLast: true
instantReuseLast_alsoChangeTurretAim: true
moveWithParent: true

beamImage:      beam_P_ews.png
beamImageEnd:   point_ews.png
#beamImageOffsetRate: 1.5
beamImageOffsetRate: 2

explodeEffect: CUSTOM:beaconBlinka
explodeEffectOnShield: CUSTOM:beaconBlinka

sweepOffsetFromTargetRadius:0.1
#sweepOffset: x
sweepSpeed:10

#=== others ===

directDamage: 0
color: #ff0000

[effect_beaconBlinka]
alsoEmitEffects: CUSTOM:beaconBlinkawave 
life:10
priority: high
image: ROOT:data\images\light_2.png
fadeOut: true
attachedToUnit: true
#color: #00ffff
scaleTo: 0.15
scaleFrom: 0
alpha:2
xOffsetRelative: 0
yOffsetRelative: 0
createWhenOffscreen: true
showInFog: true
[effect_beaconBlinkawave]
@copyFromSection: effect_beaconBlinka
life:200
alsoEmitEffects: NONE
image: ROOT:data\images\circleWaveIn.png
scaleTo: 0.35
scaleFrom: 0
alpha:0.5
[arm_1]
x:0
y:0
endDirOffset: 0
image_end:dish_2.png
drawOverBody: true
hidden:if self.hasParent()
image_end_teamColors: true

